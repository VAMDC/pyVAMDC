[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyVAMDC"
version = "0.1"
description = "A brand-new library to interact with the VAMDC infrastructure"
authors = [
    {name = "Carlo Maria ZwÃ¶lf", email = "carlo-maria.zwolf@obspm.fr"},
    {name = "Nicolas Moreau"},
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["VAMDC", "spectroscopy", "astrophysics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Astronomy",
]
dependencies = [
    "pandas>=2.0.0",
    "lxml>=4.9.0",
    "numpy>=2.0.0",
    "requests>=2.31.0",
    "rdkit>=2023.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/VAMDC/pyVAMDC"
Documentation = "https://pyvamdc.readthedocs.io"
Repository = "https://github.com/VAMDC/pyVAMDC.git"
Issues = "https://github.com/VAMDC/pyVAMDC/issues"

[project.scripts]
vamdc = "pyVAMDC.cli:main"

[tool.setuptools]
packages = ["pyVAMDC", "pyVAMDC.spectral"]

[tool.setuptools.package-dir]
"pyVAMDC" = "."
"pyVAMDC.spectral" = "spectral"

[tool.setuptools.package-data]
"*" = ["xsl/*.xsl"]

[tool.black]
line-length = 100
target-version = ["py311", "py312", "py313", "py314"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --strict-markers --tb=short"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
